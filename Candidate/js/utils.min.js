
var leavecntl; 
var leavevalue; 

function ConverttoHours(strHours) {
	var newhourvalue = strHours; 
    var newminutevalue = strHours; 
	if (strHours.length > 0) {
	    if (newhourvalue.indexOf(":") < 2) { 
	        newhourvalue = newhourvalue.substr(0, 1); 
	        newminutevalue = newminutevalue.substr(2, 2); 
	    } 
	    else { 
	        newhourvalue = newhourvalue.substr(0, 2); 
	        newminutevalue = newminutevalue.substr(3, 2); 
	    }
		newhourvalue = parseInt(newhourvalue); 
		
		if (strHours.indexOf("pm") > 0 && newhourvalue != 12) { 
		    newhourvalue = newhourvalue + 12; 
		} 
		else if (strHours.indexOf("am") > 0 && newhourvalue == 12) { 
		    newhourvalue = 0; 
		}
		
		newminutevalue = parseInt(newminutevalue); 
		return newhourvalue + (newminutevalue / 60);
	} 
	else 
	    return false;
}

function roundNumber(num, dec) { 
    var result = Math.round(num * Math.pow(10, dec)) / Math.pow(10, dec); return result;
}

function TotalDayHours(textDay) {
    
    var strStartTime, strFinishTime, strBreakStartTime, strBreakFinishTime
    
    var numStartTimeHour1 = $('input[idnotserver="' + textDay + 'StartTime"]').val();
    var numFinishTimeHour1 = $('input[idnotserver="' + textDay + 'FinishTime"]').val();
    var numBreakStartTimeHour1 = $('input[idnotserver="' + textDay + 'BreakStart"]').val();
    var numBreakFinishTimeHour1 = $('input[idnotserver="' + textDay + 'BreakFinish"]').val();
    var numTotalDay = $('input[idnotserver="' + textDay + 'HoursSubTotal"]');

    if (numStartTimeHour1 === "") {
        numTotalDay.val(0);
    } else {
        if (!numStartTimeHour1) {
            numStartTimeHour1 = 0;
        }
        if (!numFinishTimeHour1) {
            numFinishTimeHour1 = 0;
        }
        if (!numBreakStartTimeHour1) {
            numBreakStartTimeHour1 = 0;
        }
        if (!numBreakFinishTimeHour1) {
            numBreakFinishTimeHour1 = 0;
        }

        strStartTime = ConverttoHours(numStartTimeHour1);
        strFinishTime = ConverttoHours(numFinishTimeHour1);
        strBreakStartTime = ConverttoHours(numBreakStartTimeHour1);
        strBreakFinishTime = ConverttoHours(numBreakFinishTimeHour1);

        var intTotalHours;
        if (strStartTime && strFinishTime) {

            var intStartTime = strStartTime;
            var intFinishTime = strFinishTime;

            if (intFinishTime == 0 && intStartTime >= intFinishTime) {

                intTotalHours = 24 - intStartTime;
            }
            else if (intStartTime > intFinishTime) {
                intTotalHours = intFinishTime + 24 - intStartTime;
            }
            else {
                intTotalHours = intFinishTime - intStartTime;
            }

            if (strBreakStartTime && strBreakFinishTime) {
                var intBreakStartTime = strBreakStartTime;
                var intBreakFinishTime = strBreakFinishTime;
                var intTotalBreakHours = intBreakFinishTime - intBreakStartTime; intTotalHours = intTotalHours - intTotalBreakHours;
            }
            console.log(numTotalDay);
            numTotalDay.val(intTotalHours);
            return intTotalHours;
        }
        else
            return false;
    }
}

function TotalWeekHours() {
   
	var weekday = new Array(7); 
	weekday[0] = "2day"; 
	weekday[1] = "3day"; 
	weekday[2] = "4day"; 
	weekday[3] = "5day"; 
	weekday[4] = "6day"; 
	weekday[5] = "7day"; 
	weekday[6] = "1day"; 
	var daytotals = new Array(7); 
	var weektotal = 0; 
	var i = 0; 
    var errortotal = 0; 

	for (i = 0; i <= 6; i++) {
        var cntl = document.getElementsByClassName(weekday[i] + "HoursSubTotal"); 
        if (validateday(weekday[i])) {            
            daytotals[i] = TotalDayHours(weekday[i]); if (daytotals[i]) {
                console.log('totla   ' + daytotals[i]);
                cntl.value = roundNumber(daytotals[i], 2);
                weektotal = weektotal + daytotals[i];               
            } else {
                console.log('totlalNot   ' + daytotals[i]);
            cntl.value = 0;}
            updatedayicon(weekday[i], 'valid', 'Valid time');
        } else {
            cntl.value = 0; errortotal = errortotal + 1;
        } 

	}
    var cntlWeekTotal = document.getElementById("WeekTotalHours"); 
    
	if (errortotal == 0) { 
	    cntlWeekTotal.value = roundNumber(weektotal, 2); 
	    cansubmittimesheet(true, ''); 
	} 
	else { 
	    cntlWeekTotal.value = 0; 
	    cansubmittimesheet(false, 'error'); 
	} 
}

function updateleave(stringleavevalue, stringleavedisplay,leaveday) { 

    $('#' + leaveday+"day"+leavevalue).parent().find('input').attr('value', stringleavevalue); 
    $('#' + leavecntl).html(stringleavedisplay); 
    $('#' + leavecntl).attr('title', 'click to change'); 
    $('input[idnotserver="' + leaveday + 'dayStartTime"]').val('');
    $('input[idnotserver="' + leaveday + 'dayStartTime"]').attr('disabled', 'true'); 
    $('input[idnotserver="' + leaveday + 'dayBreakStart"]').val(''); 
    $('input[idnotserver="' + leaveday + 'dayBreakStart"]').attr('disabled', 'true'); 
    $('input[idnotserver="' + leaveday + 'dayBreakFinish"]').val(''); 
    $('input[idnotserver="' + leaveday + 'dayBreakFinish"]').attr('disabled', 'true'); 
    $('input[idnotserver="' + leaveday + 'dayFinishTime"]').val(''); 
    $('input[idnotserver="' + leaveday + 'dayFinishTime"]').attr('disabled', 'true'); 
    var daytotal = Number($('.' + leaveday + 'dayHoursSubTotal').attr('value')); 
    $('.' + leaveday + 'dayHoursSubTotal').attr('value', 0); 
    $('#' + 'WeekTotalHours').attr('value', Number($('#WeekTotalHours').attr('value')) - daytotal); 

    return false; 
}

function SelectLeaveType(strCntlID) { 
    leavecntl = strCntlID; 
    var i = strCntlID.indexOf('DayofLeavebutton'); 
    leaveday = strCntlID.substr(0, i); 
    leavevalue = leaveday + 'DayofLeavevalue'; 
    $('#leavedialog').dialog('open'); 
    return false; 
}

function ClearDayTimes(textday) { 
    clearvalue(textday + "StartTime"); 
    clearvalue(textday + "BreakStartTime"); 
    clearvalue(textday + "BreakFinishTime"); 
    clearvalue(textday + "FinishTime"); 
    clearvalue(textday + "HoursSubTotal"); 
}

function clearvalue(controlId) { 
    var cntl = document.querySelectorAll('input[idnotserver="' + controlId + '"]')[0];
    cntl.value = "";
    //var cntl = document.getElementById(controlId); 
    //cntl.value = ""; 
    //$('#' + controlId).change(); 
}

function saveandexit() { 
    var cntl = document.getElementById("formaction"); 
    cntl.value = "saveandexit"; 
    document.forms["theform"].submit(); 
}
    
function submitforapproval() { 
    var cntl = document.getElementById("formaction"); 
    cntl.value = "submitforapproval"; 
    document.forms["theform"].submit(); 
}

function validateday(strDay) {
    var numStartTimeHour, numFinishTimeHour, numBreakStartTimeHour, numBreakFinishTimeHour

    var numStartTimeHour1 = $('input[idnotserver="' + strDay + 'StartTime"]').val();
    var numFinishTimeHour1 = $('input[idnotserver="' + strDay + 'FinishTime"]').val();
    var numBreakStartTimeHour1 = $('input[idnotserver="' + strDay + 'BreakStart"]').val();
    var numBreakFinishTimeHour1 = $('input[idnotserver="' + strDay + 'BreakFinish"]').val(); 
    if (!numStartTimeHour1) {
        numStartTimeHour1 = 0;
    }
    if (!numFinishTimeHour1) {
        numFinishTimeHour1 = 0;
    }
    if (!numBreakStartTimeHour1) {
        numBreakStartTimeHour1 = 0;
    }
    if (!numBreakFinishTimeHour1) {
        numBreakFinishTimeHour1 = 0;
    }
    
    numStartTimeHour = ConverttoHours(numStartTimeHour1); 
    numFinishTimeHour = ConverttoHours(numFinishTimeHour1); 
    numBreakStartTimeHour = ConverttoHours(numBreakStartTimeHour1); 
    numBreakFinishTimeHour = ConverttoHours(numBreakFinishTimeHour1); 
    
	if (numStartTimeHour === 0) numStartTimeHour = 0.2; 
    if (numFinishTimeHour === 0) numFinishTimeHour = 0.2; 
    if (numBreakStartTimeHour === 0) numBreakStartTimeHour = 0.2; 
	if (numBreakFinishTimeHour === 0) numBreakFinishTimeHour = 0.2; 
    var strError
	if (numStartTimeHour && numFinishTimeHour) {
		if (numStartTimeHour < numFinishTimeHour || (numStartTimeHour > numFinishTimeHour && numFinishTimeHour == 0.2)) {
			if (numBreakStartTimeHour && numBreakFinishTimeHour) {
				if (numBreakStartTimeHour < numBreakFinishTimeHour) {
					if (numBreakStartTimeHour > numStartTimeHour) { 
					    if ((numBreakFinishTimeHour < numFinishTimeHour) || (numBreakFinishTimeHour > numFinishTimeHour && numFinishTimeHour == 0.2)) { 
					        return true; 
					    } 
					    else { 
					        updatedayicon(strDay, 'error', 'The Break Finish time must be less than the Finish time'); 
					        return false; 
					    } 
					}
					else{ 
					    updatedayicon(strDay, 'error', 'The Break Start time must be greater than the Start time'); 
					    return false; 
					} 
			    } 
			    else{ 
			        updatedayicon(strDay, 'error', 'The Break Start time must be less than the Break Finish time'); 
			        return false; 
			    } 
			} 
			else if (numBreakStartTimeHour && !numBreakFinishTimeHour) { 
			    updatedayicon(strDay, 'error', 'A Break Start time is entered with no Break Finish time'); 
			    return false; 
			} 
		    else if (numBreakFinishTimeHour && !numBreakStartTimeHour) { 
		        updatedayicon(strDay, 'error', 'A Break Finish time is entered with no Break Start time'); 
		        return false; 
		    } 
	        else if (numBreakFinishTimeHour == 0.2 || numBreakStartTimeHour == 0.2) { 
	            updatedayicon(strDay, 'error', 'The Break Start or Finish time cannot be 12:00 am'); 
	            return false; 
	        } 	
	    else { 
	        return true; 
	    } 
	} 
	else { 
	    return true; 
	    } 
	} 
	else if (numStartTimeHour && !numFinishTimeHour) { 
	    updatedayicon(strDay, 'error', 'A Start time is entered with no Finish time'); 
	    return false; 
	} 
	else if (numBreakStartTimeHour || numBreakFinishTimeHour) { 
	    updatedayicon(strDay, 'error', 'Break times entered with no Start or Finish time'); 
	    return false; 
	} 
	else if (numFinishTimeHour && !numStartTimeHour) { 
	    updatedayicon(strDay, 'error', 'A Finish time is entered with no Start time'); 
	    return false; 
	} 
	else if (numFinishTimeHour == 0.2 && numStartTimeHour == 0.2) { 
	    updatedayicon(strDay, 'error', 'The Start time and Finish time cannot be both 12:00 am'); 
	    return false; 
	} 
	else { 
	    return true; 
	} 
}

function updatedayicon(strDay, strType, strMessage) {
	$('#' + strDay + 'checkicon').addClass('ui-icon').addClass('uibuttonicon'); 
	$('#' + strDay + 'checkiconcontainer').addClass('ui-corner-all').addClass('checkiconcontainer'); 
	$('#' + strDay + 'checkicon').removeClass('ui-icon-check').removeClass('ui-icon-help').removeClass('ui-icon-alert'); 
    $('#' + strDay + 'checkiconcontainer').removeClass('checkiconcontainer').removeClass('checkiconcontainererror').removeClass('checkiconcontainerunknown'); 
	if (strType == 'error') { 
	    $('#' + strDay + 'checkicon').addClass('ui-icon-alert');
	    $('#' + strDay + 'checkiconcontainer').addClass('checkiconcontainererror'); 
	} 
	else if (strType == 'valid') { $('#' + strDay + 'checkicon').addClass('ui-icon-check'); 
	    $('#' + strDay + 'checkiconcontainer').addClass('checkiconcontainer'); 
	} 
	else { 
	    $('#' + strDay + 'checkicon').addClass('ui-icon-help'); 
	    $('#' + strDay + 'checkiconcontainer').addClass('checkiconcontainerunknown'); 
	}
	$('#' + strDay + 'checkiconcontainer').attr('title', strMessage);
}
function cansubmittimesheet(blnUpdate, strType) {
	$('#currentstateicon').addClass('ui-icon').addClass('uibuttonicon'); 
	$('#currentstateiconcontainer').addClass('ui-corner-all').addClass('checkiconcontainer'); 
	$('#currentstateicon').removeClass('ui-icon-check').removeClass('ui-icon-help').removeClass('ui-icon-alert'); 
	$('#currentstateiconcontainer').removeClass('checkiconcontainer').removeClass('checkiconcontainererror').removeClass('checkiconcontainerunknown'); 
	$('#currentstatemessage').removeClass('validationtextvalid').removeClass('validationtextunknown').removeClass('validationtexterror'); 
	if (blnUpdate) { 
	    $('#save_link').removeClass('disabled'); 
	    $('#save_link').attr('title', 'Use this if your Timesheet is not complete'); 
	    $('#submit_link').removeClass('disabled'); 
	    $('#submit_link').attr('title', 'Send Timesheet to Client for approval'); 
	    $('#currentstateicon').addClass('ui-icon-check'); 
	    $('#currentstateiconcontainer').addClass('checkiconcontainer'); 
	    $('#currentstatemessage').html('Timesheet ready to Save or Submit'); 
	    $('#currentstatemessage').addClass('validationtextvalid'); 
	} 
	else {
	    if (strType == 'error') { 
	        $('#currentstateicon').addClass('ui-icon-alert'); 
	        $('#currentstateiconcontainer').addClass('checkiconcontainererror'); 
	        $('#currentstatemessage').html('Errors found in Timesheet'); 
	        $('#currentstatemessage').addClass('validationtexterror') 
	    } 
	    else { 
	        $('#currentstateicon').addClass('ui-icon-help'); 
	        $('#currentstateiconcontainer').addClass('checkiconcontainerunknown'); 
	        $('#currentstatemessage').html('Re-calculate the Timesheet hours'); 
	        $('#currentstatemessage').addClass('validationtextunknown'); 
	    }
	$('#save_link').addClass('disabled'); 
	$('#save_link').attr('title', 'Calculate the Timesheet hours before saving'); 
	$('#submit_link').addClass('disabled'); 
	$('#submit_link').attr('title', 'Calculate the Timesheet hours before submitting');
	} 
}
function showerrordialog(strErrorTitle, strErrorText) { 
    $('#errordialog').attr('title', strErrorTitle); 
    $('#errordialogtext').html(strErrorText); 
    $('#errordialog').dialog({ autoOpen: false, modal: true, width: 350, buttons: { "OK": function() { $(this).dialog("close"); } } }); $('#errordialog').dialog('open'); 
}